services:
  api-server:
    build: ./api-server
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - ./api-server/logs:/app/logs
    restart: always

  worker:
    build: ./worker-node
    ports:
      - "3001:3001"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - ./worker-node/logs:/app/logs
    restart: always

  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    ports:
      - "15672:15672" # Management UI
      - "5672:5672" # default RabbitMQ port
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  mongodb:
    image: "mongo:latest"
    command: ["mongod", "--bind_ip_all"]
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb/data:/data/db
      - ./mongodb/logs:/var/log/mongodb
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  nginx:
    image: nginx:alpine3.22
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
    depends_on:
      api-server:
        condition: service_started
    restart: always

networks:
  default:
    driver: bridge
